AWSTemplateFormatVersion: 2010-09-09
Description: Set up Environment for Project
Parameters:
  ProjectName:
    Description: Name of the project
    Type: String
    Default: devopsuit
Resources:
  TemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-templates'
      VersioningConfiguration:
        Status: Enabled
      AccessControl: Private
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
  TaskCatBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-taskcat'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
  # ArtifactStoreBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     VersioningConfiguration:
  #       Status: Enabled
  # Pipeline:
  #   Type: AWS::CodePipeline::Pipeline
  #   Properties:
  #     ArtifactStore:
  #       Location: !Ref 'ArtifactStoreBucket'
  #       Type: S3
  #     Name: !Ref 'PipelineName'
  #     RoleArn: !GetAtt [PipelineRole, Arn]
  #     Stages:
  #       - Name: S3Source
  #         Actions:
  #           - Name: TemplateSource
  #             ActionTypeId:
  #               Category: Source
  #               Owner: AWS
  #               Provider: S3
  #               Version: '1'
  #             Configuration:
  #               S3Bucket: !Ref 'TemplatesBucket'
  #               S3ObjectKey: !Ref 'SourceS3Key'
  #             OutputArtifacts:
  #               - Name: TemplateSource
  #             RunOrder: '1'
  #       - Name: Deploy
  #         Actions:
  #           - Name: CreateStack
  #             ActionTypeId:
  #               Category: Deploy
  #               Owner: AWS
  #               Provider: CloudFormation
  #               Version: '1'
  #             InputArtifacts:
  #               - Name: TemplateSource
  #             Configuration:
  #               ActionMode: REPLACE_ON_FAILURE
  #               RoleArn: !GetAtt [CFNRole, Arn]
  #               StackName: !Ref TestStackName
  #               TemplatePath: "TemplateSource::main.yml"
  #             RunOrder: '1'

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'
