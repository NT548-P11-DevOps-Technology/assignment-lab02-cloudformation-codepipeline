AWSTemplateFormatVersion: 2010-09-09
Description: Set up Environment for Project

Parameters:
  ProjectName:
    Description: Name of the project
    Type: String
    Default: devopsuit
  RepositoryName:
    Description: Name of the repository
    Type: String
    Default: 'NT548-P11-DevOps-Technology/lab2-templates'

Resources:
  GitHubConnection:
    Type: "AWS::CodeConnections::Connection"
    Properties:
      ConnectionName: !Sub '${ProjectName}-GitHubConnection'
      ProviderType: GitHub
  TemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-templates'
      VersioningConfiguration:
        Status: Enabled
      AccessControl: Private
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-artifacts'
      VersioningConfiguration:
        Status: Enabled
      AccessControl: Private
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
  TaskCatBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-taskcat'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: s3:ListBucket
                Effect: Allow
                Resource: !GetAtt [ArtifactsBucket, Arn]
              - Action: s3:*Object
                Effect: Allow
                Resource: !Sub '${ArtifactsBucket.Arn}/*'
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'iam:PassRole'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'codestar-connections:UseConnection'
                Effect: Allow
                Resource: !GetAtt [GitHubConnection, ConnectionArn]
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource: !GetAtt [CodeBuildProject, Arn]

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-CodeBuildProject'
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
        BuildSpec: buildspec.yml
      Artifacts: 
        Type: CODEPIPELINE
      Environment:
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
      ServiceRole: !GetAtt [BuildRole, Arn]
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub '${ProjectName}-CodeBuildLogs'

  MainPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore: 
        Location: !Ref ArtifactsBucket
        Type: S3
      ExecutionMode: QUEUED
      Name: devopsuit-pipeline
      PipelineType: V2
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages: 
        - Name: Source
          Actions: 
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS                
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                FullRepositoryId: !Ref RepositoryName
                BranchName: "main"
                ConnectionArn: !GetAtt [GitHubConnection, ConnectionArn]
                OutputArtifactFormat: CODE_ZIP
              RunOrder: 1
        - Name: Build
          Actions: 
            - Name: Build
              InputArtifacts: 
                - Name: SourceOutput
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts: 
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions: 
            - Name: Deploy
              InputArtifacts: 
                - Name: BuildOutput
              ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub '${ProjectName}-stack'
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::main.yml
                RoleArn: !GetAtt [CFNRole, Arn]
              RunOrder: 1